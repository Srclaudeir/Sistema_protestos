version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: protestos_mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-password}
      MYSQL_DATABASE: ${DB_NAME:-protestos_db}
      MYSQL_USER: ${DB_USER:-protestos_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-password}
    ports:
      - "${DB_PORT:-3306}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - protestos_network

  adminer:
    image: adminer
    container_name: protestos_adminer
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - mysql
    networks:
      - protestos_network

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: protestos_backend
    restart: always
    ports:
      - "${PORT:-3000}:${PORT:-3000}"
    environment:
      DB_HOST: mysql
      DB_USER: ${DB_USER:-protestos_user}
      DB_PASSWORD: ${DB_PASSWORD:-password}
      DB_NAME: ${DB_NAME:-protestos_db}
      DB_PORT: ${DB_PORT:-3306}
      PORT: ${PORT:-3000}
      NODE_ENV: ${NODE_ENV:-development}
    depends_on:
      - mysql
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - protestos_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: protestos_frontend
    restart: always
    ports:
      - "5173:5173"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - protestos_network

volumes:
  mysql_data:

networks:
  protestos_network:
    driver: bridge